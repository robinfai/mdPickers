{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","format","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","DateTimePickerCtrl","time","monthItems","month","switchView","VIEW_DAYS","selectMonth","VIEW_HOURS","VIEW_MINUTES","VIEW_MONTHS","VIEW_YEARS","currentView","autoSwitch","view","monthTopIndex","TimePickerCtrl","clockHours","parseInt","clockMinutes","minutes","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","base","setTime","init","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","Date","now","isObject","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","skipHide","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","dateFormat","disabled","pre","ngModel","$transclude","post","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","clone","append","model","isError","$invalid","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","showPicker","ev","on","$on","off","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","r","sqrt","atan2","PI","indexOf","e","timePicker","$mdpTimePicker","timeFormat","updateTime","$error","setInvalid","Object","keys","seconds"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$mdIconProvider.icon(icon.id, icon.url);\n\t});\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$templateCache.put(icon.url, icon.svg);\n\t});\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n            \n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n            \n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n            \n            return {};\n        }\n    } \n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n    \n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\t\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n    \t\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\t\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n        \t\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n    \t\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n    \t\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\n        \n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;    \n    };\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n            \n            options.displayFormat = DISPLAY_FORMAT;\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                skipHide: true\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\tthis.dow = moment.localeData().firstDayOfWeek();\n\t\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0, \n            this.dow\n        )\n    );\n    \n    this.daysInMonth = [];\n    \n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n            \n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n            \n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n \n        return arr;\n    };\n    \n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) && \n            (!this.maxDate || this.maxDate >= day) && \n            (!self.dateFilter || !self.dateFilter(day));\n    };\n    \n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n    \n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n    \n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n    \n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !minDate.isValid() || \n            date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !maxDate.isValid() || \n            date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n                \n    return !value || \n            angular.isDate(value) || \n            !angular.isFunction(filter) || \n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n                \n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                    \n                $transclude(function(clone) {\n                   inputContainer.append(clone); \n                });  \n                \n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n                \n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n                \n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n                \n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid()) \n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement(null);\n                });\n                \n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n                \n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n                \n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n                \n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n                \n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n                \n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n                            \n                            parsed = originalModel;\n                        }\n                        return parsed.toDate(); \n                    } else\n                        return null;\n                });\n                \n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n                \n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n    \n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n                    \n                    if(!ngModel.$pristine && \n                        messages.hasClass(\"md-auto-hide\") && \n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n    \n                    ngModel.$render();\n                }\n                    \n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate, \n                \t    maxDate: scope.maxDate,\n                \t    dateFilter: scope.dateFilter,\n                \t    targetEvent: ev\n            \t    }).then(updateDate);\n                };\n                \n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n                \n                inputElement.on(\"reset input blur\", onInputElementEvents);\n                \n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n            \n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n            \n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n            \n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n            \n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate, \n            \t    maxDate: scope.maxDate,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction DateTimePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = this.time = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"DD,ddd\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n\n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    this.monthItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 6,\n        START: 1,\n        END: 12,\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n    $scope.month = this.date.month() + 1;\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.switchView(self.VIEW_DAYS);\n        self.animate();\n    };\n\tthis.selectMonth = function(month) {\n        self.date.month(month - 1);\n        $scope.month = month;\n        self.switchView(self.VIEW_DAYS);\n        self.animate();\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n    };\n\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.VIEW_DAYS = 3;\n    this.VIEW_MONTHS = 4;\n    this.VIEW_YEARS = 5;\n    this.currentView = this.VIEW_DAYS;\n    this.autoSwitch = true;\n\n    this.switchView = function (view) {\n        switch (view){\n            case this.VIEW_YEARS:\n                self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n                self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n                break;\n            case this.VIEW_MONTHS:\n                self.monthTopIndex = (self.date.month() - self.monthItems.START) + Math.floor(self.monthItems.PAGE_SIZE / 2);\n                self.monthItems.currentIndex_ = (self.date.month() - self.monthItems.START) + 1;\n                break;\n        }\n        self.currentView = view;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.date.toDate());\n    };\n}\n\nmodule.provider(\"$mdpDateTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"DD,ddd\";\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = DISPLAY_FORMAT;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DateTimePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\"  ng-click=\"datepicker.switchView(datepicker.VIEW_YEARS)\" ng-class=\"{ \\'active\\': datepicker.currentView == datepicker.VIEW_YEARS }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-month\"  ng-click=\"datepicker.switchView(datepicker.VIEW_MONTHS)\" ng-class=\"{ \\'active\\': datepicker.currentView == datepicker.VIEW_MONTHS }\">{{ datepicker.date.format(\\'MMM\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\"  ng-click=\"datepicker.switchView(datepicker.VIEW_DAYS)\" ng-class=\"{ \\'active\\': datepicker.currentView == datepicker.VIEW_DAYS }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                        '<div class=\"mdp-timepicker-selected-time\">' +\n                                            '<span ng-class=\"{ \\'active\\': datepicker.currentView == datepicker.VIEW_HOURS }\" ng-click=\"datepicker.switchView(datepicker.VIEW_HOURS)\">{{ datepicker.date.format(\"H\") }}</span>:' +\n                                            '<span ng-class=\"{ \\'active\\': datepicker.currentView == datepicker.VIEW_MINUTES }\" ng-click=\"datepicker.switchView(datepicker.VIEW_MINUTES)\">{{ datepicker.date.format(\"mm\") }}</span>' +\n                                        '</div>' +\n                                    '</md-toolbar>' +\n                                '</div>' +\n                                '<div>' +\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\"  ng-if=\"datepicker.currentView == datepicker.VIEW_YEARS\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\"  ng-if=\"datepicker.currentView == datepicker.VIEW_MONTHS\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.monthTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.monthItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectMonth(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == month }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"datepicker.currentView == datepicker.VIEW_DAYS\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"datepicker.currentView\" layout layout-align=\"center center\">' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"datepicker.autoSwitch\" time=\"datepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"datepicker.autoSwitch\" time=\"datepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                skipHide: true\n            });\n        };\n\n        return datePicker;\n    }];\n});\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, $mdMedia) {\n    var self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n\n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n\n    $scope.$mdMedia = $mdMedia;\n\n    this.switchView = function () {\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n    };\n\n    this.setAM = function () {\n        if (self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n    };\n\n    this.setPM = function () {\n        if (self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n    };\n\n    this.cancel = function () {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function () {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n\n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n\n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n\n    this.getPointerStyle = function () {\n        var divider = 1;\n        switch (self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function (deg, base) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch (self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n        var time = Math.round(divider / 360 * deg);\n        if (time == 0 && time == base) {\n            time = 12;\n        } else if (time == 0 && base == 12) {\n            time = 24;\n        }\n        else {\n            time += base;\n        }\n        self.setTime(\n            time\n        );\n    };\n\n    this.setTime = function (time, type) {\n        this.selected = time;\n\n        switch (self.type) {\n            case TYPE_HOURS:\n                time %= 24;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if (time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n\n    };\n\n    this.init = function () {\n        self.type = self.type || \"hours\";\n        switch (self.type) {\n            case TYPE_HOURS:\n                for (var i = 1; i <= 24; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if (self.selected > 24) self.selected -= 24;\n\n                break;\n            case TYPE_MINUTES:\n                for (var i = 5; i <= 55; i += 5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n\n                break;\n        }\n    };\n\n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function ($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n        '<div class=\"mdp-clock-container\">' +\n        '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n        '<md-toolbar ng-if=\"clock.selected<=12 || clock.steps.length == 12\" ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n        '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n        '</md-toolbar>' +\n        '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-if=\"$index<12\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n        '</div>' +\n        '<div class=\"mdp-clock-container\" style=\"height: 60%;width: 60%;top: -80%;left: 20%;\">' +\n        '<md-toolbar ng-if=\"clock.selected>12 && clock.steps.length == 24\" ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n        '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n        '</md-toolbar>' +\n        '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index%12 + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-if=\"$index>=12\" ng-click=\"clock.setTime(step)\">{{ step==24?\"00\":step }}</md-button>' +\n        '</div>' +\n        '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function (scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n\n            var onEvent = function (event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n                var r = Math.sqrt(Math.abs(x) * Math.abs(x) + Math.abs(y) * Math.abs(y));\n                var base = 12;\n                if (r > (60)) {\n                    base = 0;\n                }\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function () {\n                    ctrl.setTimeByDeg(deg + 180, base);\n                    if (ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function () {\n                element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function (e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function () {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function () {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n\n    this.setOKButtonLabel = function (label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function (label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.$get = [\"$mdDialog\", function ($mdDialog) {\n        var timePicker = function (time, options) {\n            if (!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            return $mdDialog.show({\n                controller: ['$scope', '$mdDialog', 'time', 'autoSwitch', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                '<div class=\"mdp-timepicker-selected-time\">' +\n                '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"H\") }}</span>:' +\n                '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                '</div>' +\n                '</md-toolbar>' +\n                '<div>' +\n                '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n                '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                '</div>' +\n\n                '<md-dialog-actions layout=\"row\">' +\n                '<span flex></span>' +\n                '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                '</md-dialog-actions>' +\n                '</div>' +\n                '</md-dialog-content>' +\n                '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch\n                },\n                skipHide: true\n            });\n        };\n\n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function ($mdpTimePicker, $timeout) {\n    return {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function (element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\">' +\n                '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                '</md-button>' +\n                '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: function (scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function (clone) {\n                inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n\n            scope.$watch(function () {\n                return ngModel.$error\n            }, function (newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function (value) {\n                var time = angular.isDate(value) && moment(value);\n                if (time && time.isValid())\n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n\n            ngModel.$validators.format = function (modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n\n            ngModel.$validators.required = function (modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n\n            ngModel.$parsers.unshift(function (value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if (parsed.isValid()) {\n                    if (angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n                    return parsed.toDate();\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if (value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n\n                if (!ngModel.$pristine &&\n                    messages.hasClass(\"md-auto-hide\") &&\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function (ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function (time) {\n                    updateTime(time, true);\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if (event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n\n            inputElement.on(\"reset input blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function () {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function ($mdpTimePicker, $timeout) {\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function (scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function (time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function () {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"],"sourceRoot":"/source/"}